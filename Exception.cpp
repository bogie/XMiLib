/// \file 
/// \author Xavier Michelon
/// 
/// \brief Implementation of custom exception class


#include "stdafx.h"
#include "Exception.h"


namespace xmilib {


//**********************************************************************************************************************
/// \param[in] what A description of the exception
//**********************************************************************************************************************
Exception::Exception(QString const& what) throw()
   : std::exception()
   , what_(what)
{

}


//**********************************************************************************************************************
/// \param[in] ref The Exception to copy from
//**********************************************************************************************************************
Exception::Exception(Exception const& ref) throw()
   : std::exception() 
   , what_(ref.what_)
{

}

//**********************************************************************************************************************
// 
//**********************************************************************************************************************
Exception::~Exception() throw()
{

}


//**********************************************************************************************************************
/// \return a C-style string describing the exception
//**********************************************************************************************************************
char const* Exception::what() const throw()
{
   return what_.toLatin1();
}


//**********************************************************************************************************************
/// \return A Qt String describing the exception
//**********************************************************************************************************************
QString const& Exception::qwhat() const throw()
{
   return what_;
}


} // namespace xmilib

